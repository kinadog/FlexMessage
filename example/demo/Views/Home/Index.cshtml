@using Demo.Configs

@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <div class="row mx-auto">
        <div class="col-lg-4">
            <div class="card mt-3">
                <div class="card-header">BROWSER ALERT</div>
                <img src="img/code_browseralert.png" class="card-img-top" alt="...">
                <div class="card-body">
                    <p class="card-text">
                        <code class="language-javascript">alert('{message}')</code>방식으로 메세지를 보내서
                        웹브라우저에 Alert 창으로 메세지를 띄웁니다.
                    </p>
                    <div class="d-flex">
                        <div class="flex-fill">
                            <a href="#" id="" class="btn btn-outline-secondary d-block me-2 px-4" data-bs-toggle="modal" data-bs-target="#ModalBrowerAlert">사용법</a>
                        </div>
                        <div class="flex-fill">
                            <a href="#" onclick="testAlert()" class="btn btn-secondary d-block me-2 px-4">테스트</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card mt-3">
                <div class="card-header">BROWSER CONSOLE</div>
                <img src="img/code_browserconsole.png" class="card-img-top" alt="...">
                <div class="card-body">
                    <p class="card-text">
                        <code class="language-javascript">console.log('{message}')</code>방식으로 메세지를 보내서
                        브라우저의 개발자도구의 콘솔창에 메세지를 보냅니다.
                    </p>
                    <div class="d-flex">
                        <div class="flex-fill">
                            <a href="#" id="" class="btn btn-outline-secondary d-block me-2 px-4" data-bs-toggle="modal" data-bs-target="#ModalBrowerConsole">사용법</a>
                        </div>
                        <div class="flex-fill">
                            <a onclick="testConsole()" class="btn btn-secondary d-block text-white me-2 px-4">테스트</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card mt-3">
                <div class="card-header">BROWSER TOAST</div>
                <img src="img/code_browsertoast.png" class="card-img-top" alt="...">
                <div class="card-body">
                    <p class="card-text">
                        <code class="language-javascript">toast('{message}')</code>방식의 안내창으로 메세지를 띄웁니다.
                        toast 메세지는 원하는대로 커스터마이징 할 수 있습니다.
                    </p>
                    <div class="d-flex">
                        <div class="flex-fill">
                            <a href="#" id="" class="btn btn-outline-secondary d-block me-2 px-4" data-bs-toggle="modal" data-bs-target="#ModalBrowerToast">사용법</a>
                        </div>
                        <div class="flex-fill">
                            <a href="#" onclick="testToast()" class="btn btn-secondary d-block me-2 px-4">테스트</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card mt-3">
                <div class="card-header">WRITE FILE</div>
                <img src="img/code_file.png" class="card-img-top" alt="...">
                <div class="card-body">
                    <p class="card-text">
                        웹서버의 text파일에 메세지를 기록합니다.
                        실시간으로 파일 변경 내용을 감지하여 브라우저에 내용을 출력 할 수 있습니다.
                    </p>
                    <div class="d-flex">
                        <div class="flex-fill">
                            <a href="#" id="" class="btn btn-outline-secondary d-block me-2 px-4" data-bs-toggle="modal" data-bs-target="#ModalFile">사용법</a>
                        </div>
                        <div class="flex-fill">
                            <a onclick="testFile()" class="btn btn-secondary d-block me-2 px-4">테스트</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card mt-3">
                <div class="card-header">WRITE DB</div>
                <img src="img/code_db.png" class="card-img-top" alt="...">
                <div class="card-body">
                    <p class="card-text">
                        메세지를 유저가 사용하는 데이터베이스에 INSERT하여 기록합니다.
                        입력 구문과 DB종류는 원하는대로 구성할 수 있습니다.
                    </p>
                    <div class="d-flex">
                        <div class="flex-fill">
                            <a href="#" id="" class="btn btn-outline-secondary d-block me-2 px-4" data-bs-toggle="modal" data-bs-target="#ModalDb">사용법</a>
                        </div>
                        <div class="flex-fill">
                            <a onclick="testDb()" class="btn btn-secondary d-block me-2 px-4">테스트</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card mt-3">
                <div class="card-header">MULTIPLE</div>
                <img src="img/code_multiple.png" class="card-img-top" alt="...">
                <div class="card-body">
                    <p class="card-text">여러가지 방식을 동시에 사용하여 메세지를 보낼 수 있습니다.</p>
                    <div class="d-flex">
                        <div class="flex-fill">
                            <a href="#" id="" class="btn btn-outline-secondary d-block me-2 px-4" data-bs-toggle="modal" data-bs-target="#ModalMultiple">사용법</a>
                        </div>
                        <div class="flex-fill">
                            <a id="BtnTestMulti" class="btn btn-secondary d-block me-2 px-4">테스트</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mx-auto gx-0">
        <div id="LogsWrap" class="row pb-3 pt-3 px-3 gx-0">
            <div class="row bg-light rounded-3 py-2 gx-0">
                <div class="col-11 ps-3">
                    <span id="WriteFileDownload">FILE NAME : <a href="~/logs/@(Config.GetFileName())" target="_blank" class="link-info">@(Config.GetFileName())</a></span>
                </div>
                <div class="col-1 pe-3 text-end">
                    <button b-type="button" id="CloseLogs" class="btn-close" aria-label="Close"></button>
                </div>
            </div>
            <div id="Logs" class="row px-3 gx-0"></div>
        </div>
    </div>

    <div class="row mx-auto gx-0">
        <div id="DbWrap" class="row pb-3 pt-3 px-3 gx-0">
            <div class="row bg-light rounded-3 py-2 gx-0">
                <div class="col-11 ps-3">
                    DATABASE TABLE :
                </div>
                <div class="col-1 pe-3 text-end">
                    <button b-type="button" id="CloseDb" class="btn-close" aria-label="Close"></button>
                </div>
            </div>
            <div id="Db" class="row px-3 gx-0">
                <table class="table table-sm my-2">
                    <thead>
                    <tr>
                        <th>Id</th>
                        <th>Message</th>
                        <th>Date</th>
                    </tr>
                    </thead>
                    <tbody class="table-group-divider">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="ModalBrowerAlert" tabindex="-1" aria-labelledby="ModalLabelBrowserAlert" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-4 fw-bold text-info" id="">BROWSER ALERT</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <img src="img/code_browseralert.png" class="w-100" alt="Browser Alert Code Sample"/>
                    </div>
                    <div class="col-12 p-2">
                        <p class="bg-light p-3">
                            서버의 C# 코드에서 웹브라우저에게 직접 Alert 메세지를 보낼 수 있습니다.<br/>
                            Write메서드의 매개변수로 MsgType를 <span class="fw-bolder text-info">BrowserAlert</span>로 선택하여 메세지를 전송하시기만 하면,
                             매우 간단하게 dotnet의 websocket방식(signalr)을 통하여 즉시 클라이언트의 웹브라우저에게 Alert 메세지가 전송 됩니다.
                        </p>

<pre class="language-csharp">
<code class="language-csharp" data-lang="csharp">Message.Write(@@"Browser Alert Sample message!", MsgType.BrowserAlert);</code>
</pre>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalBrowerConsole" tabindex="-1" aria-labelledby="ModalLabelBrowserConsole" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-4 fw-bold text-info" id="">BROWSER CONSOLE</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <img src="img/code_browserconsole.png" class="w-100" alt="Browser Console Code Sample"/>
                    </div>
                    <div class="col-12 p-2">
                        <p class="bg-light p-3">
                            서버의 C# 코드에서 웹브라우저의 개발자콘솔에 Log메세지를 출력 할 수 있습니다.<br/>
                            Write메서드의 매개변수로 MsgType를 <span class="fw-bolder text-info">BrowserConsole</span>로 선택하여 메세지를 전송하시기만 하면,
                            매우 간단하게 dotnet의 websocket방식(signalr)을 통하여 즉시 클라이언트의 웹브라우저의 개발자 콘솔에 Log메세지가 출력 됩니다.
                        </p>

<pre class="language-csharp">
<code class="language-csharp" data-lang="csharp">Message.Write(@@"Browser Console Sample message!", MsgType.BrowserConsole);</code>
</pre>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalBrowerToast" tabindex="-1" aria-labelledby="ModalLabelBrowserToast" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-4 fw-bold text-info" id="">BROWSER TOAST</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <img src="img/code_browsertoast.png" class="w-100" alt="Browser Toast Code Sample"/>
                    </div>
                    <div class="col-12 p-2">
                        <p class="bg-light p-3">
                            서버의 C# 코드에서 웹브라우저에게 직접 Toast 푸쉬알림을 보낼 수 있습니다.<br/>
                            Write메서드의 매개변수로 MsgType를 <span class="fw-bolder text-info">BrowserToast</span>로 선택하기만 하여 메세지를 전송하시면,
                            매우 간단하게 dotnet의 websocket방식(signalr)을 통하여 즉시 클라이언트의 웹브라우저에게 Toast 푸쉬알림이 전송됩니다.<br/>
                            시중에는 사용할 수 있는 매우 다양한 자바스크립트 Toast플러그인이 존재합니다. 어떠한 Toast 플러그인을 사용하시던지 관계 없이 약간의 코드 수정만으로 쉽게 적용 하실 수 있습니다.
                        </p>

 <pre class="language-csharp">
<code class="language-csharp" data-lang="csharp">// C# code
Message.Write(@@"Browser Toast Sample message!", MsgType.BrowserToast);</code>
</pre>

<pre class="language-javascript">
<code class="language-javascript" data-lang="javascript">// javascript code
connection.on("ReceiveMessage", function (msgType, message) {
    switch (msgType) {
        case "BrowserToast": {
            const toast =
				/*
				이 코드는 Bootstrap의 Toast를 실행시키는 코드 입니다.
				만약 다른 Toast 플러그인을 사용하신다면 이부분의 코드를 변경하시면 됩니다.
				*/
                new bootstrap.Toast(document.getElementById('toastWrap'));
				toast.show();
            break;
        }
		/// 다른 종류의 메세지들 ...
        case "" {
        }
    }</code>
</pre>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalFile" tabindex="-1" aria-labelledby="ModalLabelFile" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-4 fw-bold text-info" id="">WRITE FILE</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <img src="img/code_file.png" class="w-100" alt="Write File Code Sample"/>
                    </div>
                    <div class="col-12 p-2">
                        <p class="bg-light p-3">
                            서버의 C# 코드에서 메세지를 서버의 Text파일에 손쉽게 기록하고 저장하실 수 있습니다.<br/>
                            Write메서드를 사용하여 메세지를 전송하면 그 즉시 Text파일에 메세지가 기록되며, 메세지는 날짜별로 자동으로 분류되어 보관 됩니다.<br/>
                            또한 원하실 경우, 메세지가 파일에 기록 되는 것을 실시간으로 탐지하여 웹브라우저에 즉시 변경 된 내용을 출력 하는 기능이 있습니다. 이를 이용하면 웹사이트에서
                            <span class="text-danger">실시간 로그파일 뷰어</span>와 같은 서비스를 매우 쉽게 구현하실 수 있습니다.
                        </p>

<pre class="language-csharp">
<code class="language-csharp" data-lang="csharp">Message.Write(@@"Write file Sample message!", MsgType.File);</code>
</pre>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalDb" tabindex="-1" aria-labelledby="ModalLabelDb" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-4 fw-bold text-info" id="">WRITE DB</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <img src="img/code_browseralert.png" class="w-100" alt="Browser Alert Code Sample"/>
                    </div>
                    <div class="col-12 p-2">
                        <p class="bg-light p-3">
                            서버의 C# 코드에서 메세지를 데이터베이스에 손쉽게 저장하실 수 있습니다.<br/>
                            Write메서드를 사용하여 메세지를 전송하면 그 즉시 사용하시는 데이터베이스에 메세지가 저장 됩니다.<br/>
                            FlexMessage는 데이터베이스와 느슨하게 결합되도록 구현되어 있기 때문에 사용하시는 데이터베이스의 종류와 전혀 상관이 없이 저장하실 수 있으며, 또한 저장하시려는 테이블의 스키마에도 전혀 영향을 받지 않습니다.
                        </p>

<pre class="language-csharp">
<code class="language-csharp" data-lang="csharp">//C# code
//Call method
Message.Write(@@"Database Insert Sample message!", MsgType.Db);


//Write Method to save database
public void Write(string? message)
{
    if (string.IsNullOrWhiteSpace(message)) return;

    //Your database table schema
    var newLogs = new Logs();
    try
    {
        //Your database insert logic
        using var context = new EfDbContext();
        newLogs.Message = message;
        newLogs.Writedates = DateTime.Now;

        context.Logs!.Add(newLogs);
        context.SaveChanges();
    }
    catch (Exception e)
    {
        Console.WriteLine(e.Message);
    }
}</code>
</pre>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalMultiple" tabindex="-1" aria-labelledby="ModalLabelMultiple" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-4 fw-bold text-info" id="">MULTIPLE</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <img src="img/code_multiple.png" class="w-100" alt="Browser Alert Code Sample"/>
                    </div>
                    <div class="col-12 p-2">
                        <p class="bg-light p-3">
                            필요한 경우, 이러한 다양한 종류의 메세지들을 원하는 만큼 혼합하여 동시에 전송할 수 있습니다.<br/>
                            Write메서드의 매게변수에 MsgType으로 전송을 원하는 메세지타입들을 중복으로 입력 해 주시기만 하면 여러 종류의 메세지가 즉시 동시에 전송 됩니다.
                        </p>

<pre class="language-csharp">
<code class="language-csharp" data-lang="csharp">Message.Write(@@"Multiple Sample message!",
                    MsgType.BrowserAlert,
                    MsgType.BrowserConsole,
                    MsgType.BrowserToast,
                    MsgType.File,
                    MsgType.Db,
                    MsgType.Console);</code>
</pre>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>